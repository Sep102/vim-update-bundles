vim-update-bundles
Scott Bronson
5 Aug 2010


Use Pathogen and Git to manage your Vim plugins.


DESCRIPTION

This script reads statements in your vimrc describing the plugins that
you want to use

    " --- BUNDLE: git://github.com/scrooloose/nerdtree.git
    nmap <leader>d :NERDTreeToggle<cr>
    nmap <leader>D :NERDTreeFind<cr>

It then updates .vim/bundle directory to match.  Any time you modify
your .vimrc, running vim-update-bundles will keep your plugins,
syntax files, and color schemes in sync.


INSTALL

1. Install Pathogen (copy pathogen.vim into ~/.vim/autoload).
   http://github.com/tpope/vim-pathogen

2. Put " --- BUNDLE: git://github.com/bronson/vim-closebuffer.git
   statements into your ~/.vimrc.  See the examples for more.

3. git clone http://github.com/bronson/vim-update-bundles
   cd vim-update-bundles
   ./vim-update-bundles

4. Now all your bundles are up to date.  What will you do with
   all your time now that you don't need to spend it manually
   updating vim plugins?


YOUR VIMRC

Any line of the format '" --- BUNDLE: URL [REV]' will be interpreted
as a bundle to download.  REV is optional and allows you to lock
the plugin at a particular tag or branch.  The URL must be to a Git
repository.

In addition, you can specify the branch, tag, or sha1 that you'd
like the plugin to remain at.  For instance...

    " --- BUNDLE: git://github.com/scrooloose/nerdtree.git 4.0.0

Your NerdTree will remain at 4.0.0.  If NerdTree releases a new
version, just change the version number to 4.1.0 and re-run
vim-update-bundles.  It downloads only the differences, then
checks out 4.1.0.

The example uses tags but this works with branches and sha1s too.
Every time it runs, vim-update-bundles updates your plugins to
the latest available.

If you don't specify a branch, tag, or sha1, vim-update-bundles
checks out the master branch.  If you remove a bundle from your
vimrc, vim-update-bundles will of course delete its directory
from ~/.vim/bundles.  Be careful!


BUNDLES.TXT

This script lists all the bundles it downloaded, and their
release dates and version numbers (given by 'git describe').
Hit ':help bundles' to see.


HISTORY

This script came from Tammer Saleh's blog post in March 2010:
  http://tammersaleh.com/posts/the-modern-vim-config-with-pathogen

I incubated it for a while in Vimsy (a full set of Vim dotfiles
and plugins) before being split off on its own on 11 Aug 2010.
